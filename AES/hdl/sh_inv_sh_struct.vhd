-- hds header_start
--
-- VHDL Entity AES_Sound_1.SH_Inv_SH.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:15 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY SH_Inv_SH IS
   PORT( 
      in1         : IN     std_logic_vector (0 TO 7);
      in10        : IN     std_logic_vector (0 TO 7);
      in11        : IN     std_logic_vector (0 TO 7);
      in12        : IN     std_logic_vector (0 TO 7);
      in13        : IN     std_logic_vector (0 TO 7);
      in14        : IN     std_logic_vector (0 TO 7);
      in15        : IN     std_logic_vector (0 TO 7);
      in16        : IN     std_logic_vector (0 TO 7);
      in2         : IN     std_logic_vector (0 TO 7);
      in3         : IN     std_logic_vector (0 TO 7);
      in4         : IN     std_logic_vector (0 TO 7);
      in5         : IN     std_logic_vector (0 TO 7);
      in6         : IN     std_logic_vector (0 TO 7);
      in7         : IN     std_logic_vector (0 TO 7);
      in8         : IN     std_logic_vector (0 TO 7);
      in9         : IN     std_logic_vector (0 TO 7);
      sel1        : IN     std_logic_vector (0 TO 3);
      sel10       : IN     std_logic_vector (0 TO 3);
      sel11       : IN     std_logic_vector (0 TO 3);
      sel12       : IN     std_logic_vector (0 TO 3);
      sel13       : IN     std_logic_vector (0 TO 3);
      sel14       : IN     std_logic_vector (0 TO 3);
      sel15       : IN     std_logic_vector (0 TO 3);
      sel16       : IN     std_logic_vector (0 TO 3);
      sel2        : IN     std_logic_vector (0 TO 3);
      sel3        : IN     std_logic_vector (0 TO 3);
      sel4        : IN     std_logic_vector (0 TO 3);
      sel5        : IN     std_logic_vector (0 TO 3);
      sel6        : IN     std_logic_vector (0 TO 3);
      sel7        : IN     std_logic_vector (0 TO 3);
      sel8        : IN     std_logic_vector (0 TO 3);
      sel9        : IN     std_logic_vector (0 TO 3);
      shift_out10 : OUT    std_logic_vector (0 TO 7);
      shift_out11 : OUT    std_logic_vector (0 TO 7);
      shift_out12 : OUT    std_logic_vector (0 TO 7);
      shift_out13 : OUT    std_logic_vector (0 TO 7);
      shift_out14 : OUT    std_logic_vector (0 TO 7);
      shift_out15 : OUT    std_logic_vector (0 TO 7);
      shift_out16 : OUT    std_logic_vector (0 TO 7);
      shift_out7  : OUT    std_logic_vector (0 TO 7);
      shift_out8  : OUT    std_logic_vector (0 TO 7);
      shift_out9  : OUT    std_logic_vector (0 TO 7);
      shit_out1   : OUT    std_logic_vector (0 TO 7);
      shit_out2   : OUT    std_logic_vector (0 TO 7);
      shit_out3   : OUT    std_logic_vector (0 TO 7);
      shit_out4   : OUT    std_logic_vector (0 TO 7);
      shit_out5   : OUT    std_logic_vector (0 TO 7);
      shit_out6   : OUT    std_logic_vector (0 TO 7)
   );

-- Declarations

END SH_Inv_SH ;

-- hds interface_end
--
-- VHDL Architecture AES_Sound_1.SH_Inv_SH.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:15 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF SH_Inv_SH IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT Shit_w
   PORT (
      in1       : IN     std_logic_vector (0 TO 7);
      in10      : IN     std_logic_vector (0 TO 7);
      in11      : IN     std_logic_vector (0 TO 7);
      in12      : IN     std_logic_vector (0 TO 7);
      in13      : IN     std_logic_vector (0 TO 7);
      in14      : IN     std_logic_vector (0 TO 7);
      in15      : IN     std_logic_vector (0 TO 7);
      in16      : IN     std_logic_vector (0 TO 7);
      in2       : IN     std_logic_vector (0 TO 7);
      in3       : IN     std_logic_vector (0 TO 7);
      in4       : IN     std_logic_vector (0 TO 7);
      in5       : IN     std_logic_vector (0 TO 7);
      in6       : IN     std_logic_vector (0 TO 7);
      in7       : IN     std_logic_vector (0 TO 7);
      in8       : IN     std_logic_vector (0 TO 7);
      in9       : IN     std_logic_vector (0 TO 7);
      sel1      : IN     std_logic_vector (0 TO 3);
      sel2      : IN     std_logic_vector (0 TO 3);
      sel3      : IN     std_logic_vector (0 TO 3);
      sel4      : IN     std_logic_vector (0 TO 3);
      shit_out1 : OUT    std_logic_vector (0 TO 7);
      shit_out2 : OUT    std_logic_vector (0 TO 7);
      shit_out3 : OUT    std_logic_vector (0 TO 7);
      shit_out4 : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;


BEGIN
   -- Instance port mappings.
   I0 : Shit_w
      PORT MAP (
         in1       => in1,
         in10      => in10,
         in11      => in11,
         in12      => in12,
         in13      => in13,
         in14      => in14,
         in15      => in15,
         in16      => in16,
         in2       => in2,
         in3       => in3,
         in4       => in4,
         in5       => in5,
         in6       => in6,
         in7       => in7,
         in8       => in8,
         in9       => in9,
         sel1      => sel1,
         sel2      => sel2,
         sel3      => sel3,
         sel4      => sel4,
         shit_out1 => shit_out1,
         shit_out2 => shit_out2,
         shit_out3 => shit_out3,
         shit_out4 => shit_out4
      );
   I1 : Shit_w
      PORT MAP (
         in1       => in1,
         in10      => in10,
         in11      => in11,
         in12      => in12,
         in13      => in13,
         in14      => in14,
         in15      => in15,
         in16      => in16,
         in2       => in2,
         in3       => in3,
         in4       => in4,
         in5       => in5,
         in6       => in6,
         in7       => in7,
         in8       => in8,
         in9       => in9,
         sel1      => sel5,
         sel2      => sel6,
         sel3      => sel7,
         sel4      => sel8,
         shit_out1 => shit_out5,
         shit_out2 => shit_out6,
         shit_out3 => shift_out7,
         shit_out4 => shift_out8
      );
   I2 : Shit_w
      PORT MAP (
         in1       => in1,
         in10      => in10,
         in11      => in11,
         in12      => in12,
         in13      => in13,
         in14      => in14,
         in15      => in15,
         in16      => in16,
         in2       => in2,
         in3       => in3,
         in4       => in4,
         in5       => in5,
         in6       => in6,
         in7       => in7,
         in8       => in8,
         in9       => in9,
         sel1      => sel9,
         sel2      => sel10,
         sel3      => sel11,
         sel4      => sel12,
         shit_out1 => shift_out9,
         shit_out2 => shift_out10,
         shit_out3 => shift_out11,
         shit_out4 => shift_out12
      );
   I3 : Shit_w
      PORT MAP (
         in1       => in1,
         in10      => in10,
         in11      => in11,
         in12      => in12,
         in13      => in13,
         in14      => in14,
         in15      => in15,
         in16      => in16,
         in2       => in2,
         in3       => in3,
         in4       => in4,
         in5       => in5,
         in6       => in6,
         in7       => in7,
         in8       => in8,
         in9       => in9,
         sel1      => sel13,
         sel2      => sel14,
         sel3      => sel15,
         sel4      => sel16,
         shit_out1 => shift_out13,
         shit_out2 => shift_out14,
         shit_out3 => shift_out15,
         shit_out4 => shift_out16
      );

END struct;
