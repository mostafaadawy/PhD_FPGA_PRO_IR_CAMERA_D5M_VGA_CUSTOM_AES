-- hds header_start
--
-- VHDL Entity AES_Sound_1.Top_AES.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 08:27:30 02/27/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY Top_AES IS
   PORT( 
      Dec_IN_Mult1    : IN     std_logic_vector (0 TO 31);
      Dec_IN_Sel1     : IN     std_logic_vector (0 TO 63);
      EN_Dec          : IN     std_logic;
      EN_Enc          : IN     std_logic;
      En_key          : IN     std_logic;
      Enc_IN_Mult     : IN     std_logic_vector (0 TO 31);
      Enc_IN_Sel      : IN     std_logic_vector (0 TO 63);
      In_Plain_Data   : IN     std_logic_vector (0 TO 127);
      Seed            : IN     std_logic_vector (0 TO 127);
      clk             : IN     std_logic;
      in_Cipher_Data  : IN     std_logic_vector (0 TO 127);
      rst             : IN     std_logic;
      Chipher_D_Rdy   : OUT    std_logic;
      Out_Cipher_Data : OUT    std_logic_vector (0 TO 127);
      Out_Plain_Data  : OUT    std_logic_vector (0 TO 127);
      Plain_D_Rdy     : OUT    std_logic;
      finish          : OUT    std_logic
   );

-- Declarations

END Top_AES ;

-- hds interface_end
--
-- VHDL Architecture AES_Sound_1.Top_AES.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 08:27:30 02/27/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF Top_AES IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Dec_Address : std_logic_vector(0 TO 3);
   SIGNAL Dec_Reg_Key : std_logic_vector(0 TO 127);
   SIGNAL Enc_Address : std_logic_vector(0 TO 3);
   SIGNAL Enc_Reg_Key : std_logic_vector(0 TO 127);
   SIGNAL L_Key       : std_logic_vector(0 TO 127);
   SIGNAL S_Key       : std_logic_vector(0 TO 127);


   -- Component Declarations
   COMPONENT Controlled_Top_Dec
   PORT (
      Data_In  : IN     std_logic_vector (0 TO 127);
      EN       : IN     std_logic ;
      IN_Mult  : IN     std_logic_vector (0 TO 31);
      IN_Sel   : IN     std_logic_vector (0 TO 63);
      Reg_Key  : IN     std_logic_vector (0 TO 127);
      Seed     : IN     std_logic_vector (0 TO 127);
      clk      : IN     std_logic ;
      rst      : IN     std_logic ;
      Add      : OUT    std_logic_vector (0 TO 3);
      Data_Rdy : OUT    std_logic ;
      d_out    : OUT    std_logic_vector (0 TO 127)
   );
   END COMPONENT;
   COMPONENT Controlled_Top_Enc
   PORT (
      Data_In  : IN     std_logic_vector (0 TO 127);
      EN       : IN     std_logic ;
      IN_Mult  : IN     std_logic_vector (0 TO 31);
      IN_Sel   : IN     std_logic_vector (0 TO 63);
      Reg_Key  : IN     std_logic_vector (0 TO 127);
      Seed     : IN     std_logic_vector (0 TO 127);
      clk      : IN     std_logic ;
      rst      : IN     std_logic ;
      Add      : OUT    std_logic_vector (0 TO 3);
      Data_Rdy : OUT    std_logic ;
      d_out    : OUT    std_logic_vector (0 TO 127)
   );
   END COMPONENT;
   COMPONENT key_Drevation
   PORT (
      Dec_Address : IN     std_logic_vector (0 TO 3);
      En_Seed_Key : IN     std_logic ;
      Enc_Address : IN     std_logic_vector (0 TO 3);
      Seed        : IN     std_logic_vector (0 TO 127);
      clk         : IN     std_logic ;
      rst         : IN     std_logic ;
      Key_out     : OUT    std_logic_vector (0 TO 127);
      Last_Key    : OUT    std_logic_vector (0 TO 127);
      finish      : OUT    std_logic ;
      int_Seed    : OUT    std_logic_vector (0 TO 127);
      inv_Key_out : OUT    std_logic_vector (0 TO 127)
   );
   END COMPONENT;



BEGIN
   -- Instance port mappings.
   I2 : Controlled_Top_Dec
      PORT MAP (
         Data_In  => in_Cipher_Data,
         EN       => EN_Dec,
         IN_Mult  => Dec_IN_Mult1,
         IN_Sel   => Dec_IN_Sel1,
         Reg_Key  => Dec_Reg_Key,
         Seed     => L_Key,
         clk      => clk,
         rst      => rst,
         Add      => Dec_Address,
         Data_Rdy => Plain_D_Rdy,
         d_out    => Out_Plain_Data
      );
   I0 : Controlled_Top_Enc
      PORT MAP (
         Data_In  => In_Plain_Data,
         EN       => EN_Enc,
         IN_Mult  => Enc_IN_Mult,
         IN_Sel   => Enc_IN_Sel,
         Reg_Key  => Enc_Reg_Key,
         Seed     => S_Key,
         clk      => clk,
         rst      => rst,
         Add      => Enc_Address,
         Data_Rdy => Chipher_D_Rdy,
         d_out    => Out_Cipher_Data
      );
   I1 : key_Drevation
      PORT MAP (
         Dec_Address => Dec_Address,
         En_Seed_Key => En_key,
         Enc_Address => Enc_Address,
         Seed        => Seed,
         clk         => clk,
         rst         => rst,
         Key_out     => Enc_Reg_Key,
         Last_Key    => L_Key,
         finish      => finish,
         int_Seed    => S_Key,
         inv_Key_out => Dec_Reg_Key
      );

END struct;
