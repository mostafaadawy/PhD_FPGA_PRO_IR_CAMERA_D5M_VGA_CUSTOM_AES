-- VHDL Entity my_project1_lib.my_aes.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 13:47:24 02/27/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2007.1 (Build 19)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY my_aes IS
   PORT( 
      a       : IN     std_logic_vector (15 DOWNTO 0);
      b       : IN     std_logic_vector (15 DOWNTO 0);
      clk_200 : IN     std_logic;
      clk_50  : IN     std_logic;
      idec    : IN     std_logic;
      ienc    : IN     std_logic;
      ioff    : IN     std_logic;
      ion     : IN     std_logic;
      rst     : IN     std_logic;
      dec_a   : OUT    std_logic_vector (15 DOWNTO 0);
      dec_b   : OUT    std_logic_vector (15 DOWNTO 0);
      key_rdy : OUT    std_logic
   );

-- Declarations

END my_aes ;

--
-- VHDL Architecture my_project1_lib.my_aes.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 13:47:24 02/27/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2007.1 (Build 19)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY AES;
LIBRARY my_project1_lib;

ARCHITECTURE struct OF my_aes IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL In_Plain_Data   : std_logic_vector(0 TO 127);
   SIGNAL Out_Cipher_Data : std_logic_vector(0 TO 135);
   SIGNAL Out_Plain_Data  : std_logic_vector(0 TO 127);
   SIGNAL chiper_intr     : std_logic;
   SIGNAL cipher_rdy      : std_logic;
   SIGNAL ciphered_out    : std_logic_vector( 135 DOWNTO 0 );
   SIGNAL en_decryption   : std_logic;
   SIGNAL en_encryption   : std_logic;
   SIGNAL in_Cipher_Data  : std_logic_vector(0 TO 135);
   SIGNAL plain_rdy       : std_logic;


   -- Component Declarations
   COMPONENT custom_top
   PORT (
      En_key          : IN     std_logic ;
      In_Plain_Data   : IN     std_logic_vector (0 TO 127);
      clk             : IN     std_logic ;
      en              : IN     std_logic ;
      in_Cipher_Data  : IN     std_logic_vector (0 TO 135);
      rst             : IN     std_logic ;
      Out_Cipher_Data : OUT    std_logic_vector (0 TO 135);
      Out_Plain_Data  : OUT    std_logic_vector (0 TO 127);
      cipher_rdy      : OUT    std_logic ;
      key_rdy         : OUT    std_logic ;
      plain_rdy       : OUT    std_logic ;
      en_encryption   : IN     std_logic ;
      en_decryption   : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT dec_lib
   PORT (
      chipherd_in   : IN     std_logic_vector ( 135 DOWNTO 0 );
      clk           : IN     std_logic ;
      decipher_en   : IN     std_logic ;
      from_aes      : IN     std_logic_vector ( 127 DOWNTO 0 );
      idec          : IN     std_logic ;
      ienc          : IN     std_logic ;
      intr_from_aes : IN     std_logic ;
      ioff          : IN     std_logic ;
      ion           : IN     std_logic ;
      dec_a         : OUT    std_logic_vector (15 DOWNTO 0);
      dec_b         : OUT    std_logic_vector (15 DOWNTO 0);
      intr_to_aes   : OUT    std_logic ;
      to_aes        : OUT    std_logic_vector ( 135 DOWNTO 0 )
   );
   END COMPONENT;
   COMPONENT enc_lib
   PORT (
      a             : IN     std_logic_vector (15 DOWNTO 0);
      b             : IN     std_logic_vector (15 DOWNTO 0);
      clk           : IN     std_logic ;
      from_aes      : IN     std_logic_vector ( 135 DOWNTO 0 );
      ienc          : IN     std_logic ;
      intr_from_aes : IN     std_logic ;
      ioff          : IN     std_logic ;
      ion           : IN     std_logic ;
      chiper_intr   : OUT    std_logic ;
      ciphered_out  : OUT    std_logic_vector ( 135 DOWNTO 0 );
      intr_to_aes   : OUT    std_logic ;
      to_aes        : OUT    std_logic_vector (127 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : custom_top USE ENTITY AES.custom_top;
   FOR ALL : dec_lib USE ENTITY my_project1_lib.dec_lib;
   FOR ALL : enc_lib USE ENTITY my_project1_lib.enc_lib;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_2 : custom_top
      PORT MAP (
         En_key          => ion,
         In_Plain_Data   => In_Plain_Data,
         clk             => clk_200,
         en              => ion,
         in_Cipher_Data  => in_Cipher_Data,
         rst             => rst,
         Out_Cipher_Data => Out_Cipher_Data,
         Out_Plain_Data  => Out_Plain_Data,
         cipher_rdy      => cipher_rdy,
         key_rdy         => key_rdy,
         plain_rdy       => plain_rdy,
         en_encryption   => en_encryption,
         en_decryption   => en_decryption
      );
   U_0 : dec_lib
      PORT MAP (
         chipherd_in   => ciphered_out,
         clk           => clk_50,
         decipher_en   => chiper_intr,
         from_aes      => Out_Plain_Data,
         idec          => idec,
         ienc          => ienc,
         intr_from_aes => plain_rdy,
         ioff          => ioff,
         ion           => ion,
         dec_a         => dec_a,
         dec_b         => dec_b,
         intr_to_aes   => en_decryption,
         to_aes        => in_Cipher_Data
      );
   U_1 : enc_lib
      PORT MAP (
         a             => a,
         b             => b,
         clk           => clk_50,
         from_aes      => Out_Cipher_Data,
         ienc          => ienc,
         intr_from_aes => cipher_rdy,
         ioff          => ioff,
         ion           => ion,
         chiper_intr   => chiper_intr,
         ciphered_out  => ciphered_out,
         intr_to_aes   => en_encryption,
         to_aes        => In_Plain_Data
      );

END struct;
