-- hds header_start
--
-- VHDL Entity AES_Sound_1.Inv_Substituation.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:23 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY Inv_Substituation IS
   PORT( 
      Inv_Sub_IN1   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN10  : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN11  : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN12  : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN13  : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN14  : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN15  : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN16  : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN2   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN3   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN4   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN5   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN6   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN7   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN8   : IN     std_logic_vector (0 TO 7);
      Inv_Sub_IN9   : IN     std_logic_vector (0 TO 7);
      clk           : IN     std_logic;
      Inv_Sub_OUT1  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT10 : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT11 : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT12 : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT13 : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT14 : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT15 : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT16 : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT2  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT3  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT4  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT5  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT6  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT7  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT8  : OUT    std_logic_vector (0 TO 7);
      Inv_Sub_OUT9  : OUT    std_logic_vector (0 TO 7)
   );

-- Declarations

END Inv_Substituation ;

-- hds interface_end
--
-- VHDL Architecture AES_Sound_1.Inv_Substituation.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:23 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ARCHITECTURE struct OF Inv_Substituation IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT Inv_SBox301
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox313
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox319
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox333
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox351
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox355
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox357
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox361
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox369
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox375
   PORT (
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7);
      clk       : IN     std_logic 
   );
   END COMPONENT;
   COMPONENT Inv_SBox379
   PORT (
      clk       : IN     std_logic ;
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT Inv_SBox391
   PORT (
      clk       : IN     std_logic ;
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT Inv_SBox395
   PORT (
      clk       : IN     std_logic ;
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT Inv_SBox397
   PORT (
      clk       : IN     std_logic ;
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT Inv_SBox415
   PORT (
      clk       : IN     std_logic ;
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT Inv_SBox419
   PORT (
      clk       : IN     std_logic ;
      invsboxip : IN     std_logic_vector (0 TO 7);
      invsboxop : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;

BEGIN
   -- Instance port mappings.
   I0 : Inv_SBox301
      PORT MAP (
         invsboxip => Inv_Sub_IN1,
         invsboxop => Inv_Sub_OUT1,
         clk       => clk
      );
   I1 : Inv_SBox313
      PORT MAP (
         invsboxip => Inv_Sub_IN2,
         invsboxop => Inv_Sub_OUT2,
         clk       => clk
      );
   I2 : Inv_SBox319
      PORT MAP (
         invsboxip => Inv_Sub_IN3,
         invsboxop => Inv_Sub_OUT3,
         clk       => clk
      );
   I3 : Inv_SBox333
      PORT MAP (
         invsboxip => Inv_Sub_IN4,
         invsboxop => Inv_Sub_OUT4,
         clk       => clk
      );
   I4 : Inv_SBox351
      PORT MAP (
         invsboxip => Inv_Sub_IN5,
         invsboxop => Inv_Sub_OUT5,
         clk       => clk
      );
   I5 : Inv_SBox355
      PORT MAP (
         invsboxip => Inv_Sub_IN6,
         invsboxop => Inv_Sub_OUT6,
         clk       => clk
      );
   I6 : Inv_SBox357
      PORT MAP (
         invsboxip => Inv_Sub_IN7,
         invsboxop => Inv_Sub_OUT7,
         clk       => clk
      );
   I7 : Inv_SBox361
      PORT MAP (
         invsboxip => Inv_Sub_IN8,
         invsboxop => Inv_Sub_OUT8,
         clk       => clk
      );
   I8 : Inv_SBox369
      PORT MAP (
         invsboxip => Inv_Sub_IN9,
         invsboxop => Inv_Sub_OUT9,
         clk       => clk
      );
   I9 : Inv_SBox375
      PORT MAP (
         invsboxip => Inv_Sub_IN10,
         invsboxop => Inv_Sub_OUT10,
         clk       => clk
      );
   I10 : Inv_SBox379
      PORT MAP (
         clk       => clk,
         invsboxip => Inv_Sub_IN11,
         invsboxop => Inv_Sub_OUT11
      );
   I17 : Inv_SBox391
      PORT MAP (
         clk       => clk,
         invsboxip => Inv_Sub_IN12,
         invsboxop => Inv_Sub_OUT12
      );
   I12 : Inv_SBox395
      PORT MAP (
         clk       => clk,
         invsboxip => Inv_Sub_IN13,
         invsboxop => Inv_Sub_OUT13
      );
   I13 : Inv_SBox397
      PORT MAP (
         clk       => clk,
         invsboxip => Inv_Sub_IN14,
         invsboxop => Inv_Sub_OUT14
      );
   I14 : Inv_SBox415
      PORT MAP (
         clk       => clk,
         invsboxip => Inv_Sub_IN15,
         invsboxop => Inv_Sub_OUT15
      );
   I18 : Inv_SBox419
      PORT MAP (
         clk       => clk,
         invsboxip => Inv_Sub_IN16,
         invsboxop => Inv_Sub_OUT16
      );

END struct;
