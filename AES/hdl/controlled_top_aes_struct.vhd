-- hds header_start
--
-- VHDL Entity AES_Sound_1.Controlled_Top_AES.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:26 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY Controlled_Top_AES IS
   PORT( 
      Dec_seed_gen    : IN     std_logic_vector (0 TO 7);
      EN_Dec          : IN     std_logic;
      EN_Enc          : IN     std_logic;
      En_key          : IN     std_logic;
      In_Plain_Data   : IN     std_logic_vector (0 TO 127);
      clk             : IN     std_logic;
      in_Cipher_Data  : IN     std_logic_vector (0 TO 127);
      rst             : IN     std_logic;
      Chipher_D_Rdy   : OUT    std_logic;
      Out_Cipher_Data : OUT    std_logic_vector (0 TO 127);
      Out_Plain_Data  : OUT    std_logic_vector (0 TO 127);
      Plain_D_Rdy     : OUT    std_logic;
      key_rdy         : OUT    std_logic;
      rand_gen_seed   : OUT    std_logic_vector (0 TO 7)
   );

-- Declarations

END Controlled_Top_AES ;

-- hds interface_end
--
-- VHDL Architecture AES_Sound_1.Controlled_Top_AES.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:26 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ARCHITECTURE struct OF Controlled_Top_AES IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL En_data_reg  : std_logic;
   SIGNAL En_data_reg1 : std_logic;
   SIGNAL En_set       : std_logic;
   SIGNAL d_out        : std_logic_vector(0 TO 127);
   SIGNAL d_out1       : std_logic_vector(0 TO 127);
   SIGNAL en_sen_seed  : std_logic;
   SIGNAL gen_en       : std_logic;
   SIGNAL gen_seed     : std_logic_vector(0 TO 7);
   SIGNAL out0         : std_logic_vector(0 TO 7);

   -- Implicit buffer signal declarations
   SIGNAL key_rdy_internal       : std_logic;
   SIGNAL Chipher_D_Rdy_internal : std_logic;
   SIGNAL Plain_D_Rdy_internal   : std_logic;


   -- Component Declarations
   COMPONENT AES_Dec_main_contrl
   PORT (
      Data_rdy    : IN     std_logic ;
      En_data     : IN     std_logic ;
      Key_rdy     : IN     std_logic ;
      clk         : IN     std_logic ;
      rst         : IN     std_logic ;
      En_data_reg : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT AES_Enc_main_contrl
   PORT (
      Data_rdy    : IN     std_logic ;
      En_data     : IN     std_logic ;
      Key_rdy     : IN     std_logic ;
      clk         : IN     std_logic ;
      rst         : IN     std_logic ;
      s_intial    : IN     std_logic_vector (0 TO 7);
      En_data_reg : OUT    std_logic ;
      En_set      : OUT    std_logic ;
      en_sen_seed : OUT    std_logic ;
      gen_en      : OUT    std_logic ;
      gen_seed    : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT Cust_Top_AES
   PORT (
      Dec_seed_gen    : IN     std_logic_vector (0 TO 7);
      EN_Dec          : IN     std_logic ;
      EN_Enc          : IN     std_logic ;
      En_Sen_Seed     : IN     std_logic ;
      En_key          : IN     std_logic ;
      Gen_en          : IN     std_logic ;
      In_Plain_Data   : IN     std_logic_vector (0 TO 127);
      clk             : IN     std_logic ;
      en_set          : IN     std_logic ;
      in_Cipher_Data  : IN     std_logic_vector (0 TO 127);
      rst             : IN     std_logic ;
      seed_gen        : IN     std_logic_vector (0 TO 7);
      Chipher_D_Rdy   : OUT    std_logic ;
      Out_Cipher_Data : OUT    std_logic_vector (0 TO 127);
      Out_Plain_Data  : OUT    std_logic_vector (0 TO 127);
      Plain_D_Rdy     : OUT    std_logic ;
      key_rdy         : OUT    std_logic ;
      rand_gen_seed   : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT REG8
   PORT (
      clk  : IN     std_logic ;
      en   : IN     std_logic ;
      in0  : IN     std_logic_vector (0 TO 7);
      rst  : IN     std_logic ;
      out0 : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT reg_128bit
   PORT (
      clk   : IN     std_logic ;
      d_in  : IN     std_logic_vector (0 TO 127);
      en    : IN     std_logic ;
      rst   : IN     std_logic ;
      d_out : OUT    std_logic_vector (0 TO 127)
   );
   END COMPONENT;


BEGIN
   -- Instance port mappings.
   I4 : AES_Dec_main_contrl
      PORT MAP (
         Data_rdy    => Plain_D_Rdy_internal,
         En_data     => EN_Dec,
         Key_rdy     => key_rdy_internal,
         clk         => clk,
         rst         => rst,
         En_data_reg => En_data_reg1
      );
   I1 : AES_Enc_main_contrl
      PORT MAP (
         Data_rdy    => Chipher_D_Rdy_internal,
         En_data     => EN_Enc,
         Key_rdy     => key_rdy_internal,
         clk         => clk,
         rst         => rst,
         s_intial    => d_out(97 TO 104),
         En_data_reg => En_data_reg,
         En_set      => En_set,
         en_sen_seed => en_sen_seed,
         gen_en      => gen_en,
         gen_seed    => gen_seed
      );
   I0 : Cust_Top_AES
      PORT MAP (
         Dec_seed_gen    => out0,
         EN_Dec          => En_data_reg1,
         EN_Enc          => En_data_reg,
         En_Sen_Seed     => en_sen_seed,
         En_key          => En_key,
         Gen_en          => gen_en,
         In_Plain_Data   => d_out,
         clk             => clk,
         en_set          => En_set,
         in_Cipher_Data  => d_out1,
         rst             => rst,
         seed_gen        => gen_seed,
         Chipher_D_Rdy   => Chipher_D_Rdy_internal,
         Out_Cipher_Data => Out_Cipher_Data,
         Out_Plain_Data  => Out_Plain_Data,
         Plain_D_Rdy     => Plain_D_Rdy_internal,
         key_rdy         => key_rdy_internal,
         rand_gen_seed   => rand_gen_seed
      );
   I5 : REG8
      PORT MAP (
         clk  => clk,
         en   => EN_Dec,
         in0  => Dec_seed_gen,
         rst  => rst,
         out0 => out0
      );
   I2 : reg_128bit
      PORT MAP (
         clk   => clk,
         d_in  => In_Plain_Data,
         en    => EN_Enc,
         rst   => rst,
         d_out => d_out
      );
   I3 : reg_128bit
      PORT MAP (
         clk   => clk,
         d_in  => in_Cipher_Data,
         en    => EN_Dec,
         rst   => rst,
         d_out => d_out1
      );

   -- Implicit buffered output assignments
   key_rdy       <= key_rdy_internal;
   Chipher_D_Rdy <= Chipher_D_Rdy_internal;
   Plain_D_Rdy   <= Plain_D_Rdy_internal;

END struct;
