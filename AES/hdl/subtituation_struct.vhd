-- hds header_start
--
-- VHDL Entity AES_Sound_1.Subtituation.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:18 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY Subtituation IS
   PORT( 
      Sub_in1   : IN     std_logic_vector (0 TO 7);
      Sub_in10  : IN     std_logic_vector (0 TO 7);
      Sub_in11  : IN     std_logic_vector (0 TO 7);
      Sub_in12  : IN     std_logic_vector (0 TO 7);
      Sub_in13  : IN     std_logic_vector (0 TO 7);
      Sub_in14  : IN     std_logic_vector (0 TO 7);
      Sub_in15  : IN     std_logic_vector (0 TO 7);
      Sub_in16  : IN     std_logic_vector (0 TO 7);
      Sub_in2   : IN     std_logic_vector (0 TO 7);
      Sub_in3   : IN     std_logic_vector (0 TO 7);
      Sub_in4   : IN     std_logic_vector (0 TO 7);
      Sub_in5   : IN     std_logic_vector (0 TO 7);
      Sub_in6   : IN     std_logic_vector (0 TO 7);
      Sub_in7   : IN     std_logic_vector (0 TO 7);
      Sub_in8   : IN     std_logic_vector (0 TO 7);
      Sub_in9   : IN     std_logic_vector (0 TO 7);
      clk       : IN     std_logic;
      Sub_out1  : OUT    std_logic_vector (0 TO 7);
      Sub_out10 : OUT    std_logic_vector (0 TO 7);
      Sub_out11 : OUT    std_logic_vector (0 TO 7);
      Sub_out12 : OUT    std_logic_vector (0 TO 7);
      Sub_out13 : OUT    std_logic_vector (0 TO 7);
      Sub_out14 : OUT    std_logic_vector (0 TO 7);
      Sub_out15 : OUT    std_logic_vector (0 TO 7);
      Sub_out16 : OUT    std_logic_vector (0 TO 7);
      Sub_out2  : OUT    std_logic_vector (0 TO 7);
      Sub_out3  : OUT    std_logic_vector (0 TO 7);
      Sub_out4  : OUT    std_logic_vector (0 TO 7);
      Sub_out5  : OUT    std_logic_vector (0 TO 7);
      Sub_out6  : OUT    std_logic_vector (0 TO 7);
      Sub_out7  : OUT    std_logic_vector (0 TO 7);
      Sub_out8  : OUT    std_logic_vector (0 TO 7);
      Sub_out9  : OUT    std_logic_vector (0 TO 7)
   );

-- Declarations

END Subtituation ;

-- hds interface_end
--
-- VHDL Architecture AES_Sound_1.Subtituation.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:18 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;



ARCHITECTURE struct OF Subtituation IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT sbox_rom301
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom313
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom319
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom333
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom351
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom355
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom357
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom361
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom369
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom375
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom379
   PORT (
      clk     : IN     std_logic ;
      rom_in  : IN     std_logic_vector (0 TO 7);
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom391
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom395
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom397
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom415
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT sbox_rom419
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;



BEGIN
   -- Instance port mappings.
   I0 : sbox_rom301
      PORT MAP (
         rom_in  => Sub_in1,
         clk     => clk,
         rom_out => Sub_out1
      );
   I1 : sbox_rom313
      PORT MAP (
         rom_in  => Sub_in2,
         clk     => clk,
         rom_out => Sub_out2
      );
   I2 : sbox_rom319
      PORT MAP (
         rom_in  => Sub_in3,
         clk     => clk,
         rom_out => Sub_out3
      );
   I3 : sbox_rom333
      PORT MAP (
         rom_in  => Sub_in4,
         clk     => clk,
         rom_out => Sub_out4
      );
   I4 : sbox_rom351
      PORT MAP (
         rom_in  => Sub_in5,
         clk     => clk,
         rom_out => Sub_out5
      );
   I5 : sbox_rom355
      PORT MAP (
         rom_in  => Sub_in6,
         clk     => clk,
         rom_out => Sub_out6
      );
   I6 : sbox_rom357
      PORT MAP (
         rom_in  => Sub_in7,
         clk     => clk,
         rom_out => Sub_out7
      );
   I7 : sbox_rom361
      PORT MAP (
         rom_in  => Sub_in8,
         clk     => clk,
         rom_out => Sub_out8
      );
   I8 : sbox_rom369
      PORT MAP (
         rom_in  => Sub_in9,
         clk     => clk,
         rom_out => Sub_out9
      );
   I9 : sbox_rom375
      PORT MAP (
         rom_in  => Sub_in10,
         clk     => clk,
         rom_out => Sub_out10
      );
   I10 : sbox_rom379
      PORT MAP (
         clk     => clk,
         rom_in  => Sub_in11,
         rom_out => Sub_out11
      );
   I11 : sbox_rom391
      PORT MAP (
         rom_in  => Sub_in12,
         clk     => clk,
         rom_out => Sub_out12
      );
   I12 : sbox_rom395
      PORT MAP (
         rom_in  => Sub_in13,
         clk     => clk,
         rom_out => Sub_out13
      );
   I13 : sbox_rom397
      PORT MAP (
         rom_in  => Sub_in14,
         clk     => clk,
         rom_out => Sub_out14
      );
   I14 : sbox_rom415
      PORT MAP (
         rom_in  => Sub_in15,
         clk     => clk,
         rom_out => Sub_out15
      );
   I18 : sbox_rom419
      PORT MAP (
         rom_in  => Sub_in16,
         clk     => clk,
         rom_out => Sub_out16
      );

END struct;
