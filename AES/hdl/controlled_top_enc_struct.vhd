-- hds header_start
--
-- VHDL Entity AES_Sound_1.Controlled_Top_Enc.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 08:27:26 02/27/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY Controlled_Top_Enc IS
   PORT( 
      Data_In  : IN     std_logic_vector (0 TO 127);
      EN       : IN     std_logic;
      IN_Mult  : IN     std_logic_vector (0 TO 31);
      IN_Sel   : IN     std_logic_vector (0 TO 63);
      Reg_Key  : IN     std_logic_vector (0 TO 127);
      Seed     : IN     std_logic_vector (0 TO 127);
      clk      : IN     std_logic;
      rst      : IN     std_logic;
      Add      : OUT    std_logic_vector (0 TO 3);
      Data_Rdy : OUT    std_logic;
      d_out    : OUT    std_logic_vector (0 TO 127)
   );

-- Declarations

END Controlled_Top_Enc ;

-- hds interface_end
--
-- VHDL Architecture AES_Sound_1.Controlled_Top_Enc.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 08:27:27 02/27/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF Controlled_Top_Enc IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL End_Enc : std_logic;
   SIGNAL IN_Data : std_logic_vector(0 TO 127);
   SIGNAL RND_OUT : std_logic_vector(0 TO 127);
   SIGNAL Rdy     : std_logic;
   SIGNAL Rnd_9   : std_logic;


   -- Component Declarations
   COMPONENT Top_Enc
   PORT (
      EN      : IN     std_logic ;
      IN_Data : IN     std_logic_vector (0 TO 127);
      IN_Mult : IN     std_logic_vector (0 TO 31);
      IN_Sel  : IN     std_logic_vector (0 TO 63);
      Reg_Key : IN     std_logic_vector (0 TO 127);
      clk     : IN     std_logic ;
      rst     : IN     std_logic ;
      Add     : OUT    std_logic_vector (0 TO 3);
      End_Enc : OUT    std_logic ;
      RND_OUT : OUT    std_logic_vector (0 TO 127);
      Rnd_9   : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Xor_128
   PORT (
      in0  : IN     std_logic_vector (0 TO 127);
      in1  : IN     std_logic_vector (0 TO 127);
      out0 : OUT    std_logic_vector (0 TO 127)
   );
   END COMPONENT;
   COMPONENT lim_intr
   PORT (
      Clk : IN     std_logic ;
      En  : IN     std_logic ;
      Rst : IN     std_logic ;
      Rdy : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT reg_128bit
   PORT (
      clk   : IN     std_logic ;
      d_in  : IN     std_logic_vector (0 TO 127);
      en    : IN     std_logic ;
      rst   : IN     std_logic ;
      d_out : OUT    std_logic_vector (0 TO 127)
   );
   END COMPONENT;



BEGIN
   -- Instance port mappings.
   I0 : Top_Enc
      PORT MAP (
         EN      => EN,
         IN_Data => IN_Data,
         IN_Mult => IN_Mult,
         IN_Sel  => IN_Sel,
         Reg_Key => Reg_Key,
         clk     => clk,
         rst     => rst,
         Add     => Add,
         End_Enc => End_Enc,
         RND_OUT => RND_OUT,
         Rnd_9   => Rnd_9
      );
   I1 : Xor_128
      PORT MAP (
         in0  => Data_In,
         in1  => Seed,
         out0 => IN_Data
      );
   I3 : lim_intr
      PORT MAP (
         Clk => clk,
         En  => Rnd_9,
         Rst => rst,
         Rdy => Rdy
      );
   I4 : lim_intr
      PORT MAP (
         Clk => clk,
         En  => End_Enc,
         Rst => rst,
         Rdy => Data_Rdy
      );
   I2 : reg_128bit
      PORT MAP (
         clk   => clk,
         d_in  => RND_OUT,
         en    => Rdy,
         rst   => rst,
         d_out => d_out
      );

END struct;
