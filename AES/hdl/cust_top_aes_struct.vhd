-- hds header_start
--
-- VHDL Entity AES_Sound_1.Cust_Top_AES.symbol
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:25 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
-- hds header_end
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY Cust_Top_AES IS
   PORT( 
      Dec_seed_gen    : IN     std_logic_vector (0 TO 7);
      EN_Dec          : IN     std_logic;
      EN_Enc          : IN     std_logic;
      En_Sen_Seed     : IN     std_logic;
      En_key          : IN     std_logic;
      Gen_en          : IN     std_logic;
      In_Plain_Data   : IN     std_logic_vector (0 TO 127);
      clk             : IN     std_logic;
      en_set          : IN     std_logic;
      in_Cipher_Data  : IN     std_logic_vector (0 TO 127);
      rst             : IN     std_logic;
      seed_gen        : IN     std_logic_vector (0 TO 7);
      Chipher_D_Rdy   : OUT    std_logic;
      Out_Cipher_Data : OUT    std_logic_vector (0 TO 127);
      Out_Plain_Data  : OUT    std_logic_vector (0 TO 127);
      Plain_D_Rdy     : OUT    std_logic;
      key_rdy         : OUT    std_logic;
      rand_gen_seed   : OUT    std_logic_vector (0 TO 7)
   );

-- Declarations

END Cust_Top_AES ;

-- hds interface_end
--
-- VHDL Architecture AES_Sound_1.Cust_Top_AES.struct
--
-- Created:
--          by - Mostafa.UNKNOWN (MOSTAFA_PC)
--          at - 15:33:25 02/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2001.5 (Build 170)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF Cust_Top_AES IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Dec_IN_Mult1 : std_logic_vector(0 TO 31);
   SIGNAL Dec_IN_Sel1  : std_logic_vector(0 TO 63);
   SIGNAL Enc_IN_Mult  : std_logic_vector(0 TO 31);
   SIGNAL Enc_IN_Sel   : std_logic_vector(0 TO 63);
   SIGNAL Seed         : std_logic_vector(0 TO 127);
   SIGNAL rand_gen     : std_logic_vector(0 TO 7);


   -- Component Declarations
   COMPONENT Lfsr
   PORT (
      Clk      : IN     std_logic ;
      en       : IN     std_logic ;
      en_set   : IN     std_logic ;
      seed_gen : IN     std_logic_vector (0 TO 7);
      sel_out  : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT REG8
   PORT (
      clk  : IN     std_logic ;
      en   : IN     std_logic ;
      in0  : IN     std_logic_vector (0 TO 7);
      rst  : IN     std_logic ;
      out0 : OUT    std_logic_vector (0 TO 7)
   );
   END COMPONENT;
   COMPONENT Top_AES
   PORT (
      Dec_IN_Mult1    : IN     std_logic_vector (0 TO 31);
      Dec_IN_Sel1     : IN     std_logic_vector (0 TO 63);
      EN_Dec          : IN     std_logic ;
      EN_Enc          : IN     std_logic ;
      En_key          : IN     std_logic ;
      Enc_IN_Mult     : IN     std_logic_vector (0 TO 31);
      Enc_IN_Sel      : IN     std_logic_vector (0 TO 63);
      In_Plain_Data   : IN     std_logic_vector (0 TO 127);
      Seed            : IN     std_logic_vector (0 TO 127);
      clk             : IN     std_logic ;
      in_Cipher_Data  : IN     std_logic_vector (0 TO 127);
      rst             : IN     std_logic ;
      Chipher_D_Rdy   : OUT    std_logic ;
      Out_Cipher_Data : OUT    std_logic_vector (0 TO 127);
      Out_Plain_Data  : OUT    std_logic_vector (0 TO 127);
      Plain_D_Rdy     : OUT    std_logic ;
      finish          : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT gen_rom
   PORT (
      rom_in  : IN     std_logic_vector (0 TO 7);
      clk     : IN     std_logic ;
      rom_out : OUT    std_logic_vector (0 TO 63)
   );
   END COMPONENT;
   COMPONENT inv_gen_rom
   PORT (
      clk     : IN     std_logic ;
      rom_in  : IN     std_logic_vector (0 TO 7);
      rom_out : OUT    std_logic_vector (0 TO 63)
   );
   END COMPONENT;
   COMPONENT inv_mix_rom
   PORT (
      clk     : IN     std_logic ;
      rom_in  : IN     std_logic_vector (0 TO 3);
      rom_out : OUT    std_logic_vector (0 TO 31)
   );
   END COMPONENT;
   COMPONENT mix_rom
   PORT (
      clk     : IN     std_logic ;
      rom_in  : IN     std_logic_vector (0 TO 3);
      rom_out : OUT    std_logic_vector (0 TO 31)
   );
   END COMPONENT;


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   -- eb1 1                              
   seed <= "00000000000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111";

   -- Instance port mappings.
   I3 : Lfsr
      PORT MAP (
         Clk      => clk,
         en       => Gen_en,
         en_set   => en_set,
         seed_gen => seed_gen,
         sel_out  => rand_gen
      );
   I6 : REG8
      PORT MAP (
         clk  => clk,
         en   => En_Sen_Seed,
         in0  => rand_gen,
         rst  => rst,
         out0 => rand_gen_seed
      );
   I0 : Top_AES
      PORT MAP (
         Dec_IN_Mult1    => Dec_IN_Mult1,
         Dec_IN_Sel1     => Dec_IN_Sel1,
         EN_Dec          => EN_Dec,
         EN_Enc          => EN_Enc,
         En_key          => En_key,
         Enc_IN_Mult     => Enc_IN_Mult,
         Enc_IN_Sel      => Enc_IN_Sel,
         In_Plain_Data   => In_Plain_Data,
         Seed            => Seed,
         clk             => clk,
         in_Cipher_Data  => in_Cipher_Data,
         rst             => rst,
         Chipher_D_Rdy   => Chipher_D_Rdy,
         Out_Cipher_Data => Out_Cipher_Data,
         Out_Plain_Data  => Out_Plain_Data,
         Plain_D_Rdy     => Plain_D_Rdy,
         finish          => key_rdy
      );
   I1 : gen_rom
      PORT MAP (
         rom_in  => rand_gen,
         clk     => clk,
         rom_out => Enc_IN_Sel
      );
   I2 : inv_gen_rom
      PORT MAP (
         clk     => clk,
         rom_in  => Dec_seed_gen,
         rom_out => Dec_IN_Sel1
      );
   I4 : inv_mix_rom
      PORT MAP (
         clk     => clk,
         rom_in  => Dec_seed_gen(1 TO 4),
         rom_out => Dec_IN_Mult1
      );
   I5 : mix_rom
      PORT MAP (
         clk     => clk,
         rom_in  => rand_gen(1 TO 4),
         rom_out => Enc_IN_Mult
      );

END struct;
